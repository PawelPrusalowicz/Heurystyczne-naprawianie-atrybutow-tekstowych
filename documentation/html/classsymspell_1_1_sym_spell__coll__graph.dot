digraph "symspell::SymSpell"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{symspell::SymSpell\n|- initialCapacity\l- maxDictionaryEditDistance\l- prefixLength\l- countThreshold\l- compactMask\l- distanceAlgorithm\l- maxDictionaryWordLength\l- mtx\l- candidates\l- edits\land 10 more...\l|+ SymSpell()\l+ ~SymSpell()\l+ CreateDictionaryEntry()\l+ EditsPrefix()\l+ Edits()\l+ PurgeBelowThresholdWords()\l+ CommitStaged()\l+ Lookup()\l+ Lookup()\l+ Lookup()\land 11 more...\l- DeleteInSuggestionPrefix()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="SymSpell algorithm implementation."];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -stringHash" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{symspell::hash_c_string\n||+ hash_combine()\l+ operator()()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structsymspell_1_1hash__c__string.html",tooltip="SymSpell element."];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -distanceComparer" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{symspell::EditDistance\n|- algorithm\l- distanceComparer\l|+ EditDistance()\l+ Compare()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsymspell_1_1_edit_distance.html",tooltip="SymSpell element."];
}
